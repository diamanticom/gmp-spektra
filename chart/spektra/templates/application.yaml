apiVersion: app.k8s.io/v1beta1
kind: Application
metadata:
  name: "{{ .Release.Name }}"
  labels:
    app.kubernetes.io/name: "{{ .Release.Name }}"
  annotations:
    kubernetes-engine.cloud.google.com/icon: >-
      data:image/png;base64,{{ .Files.Get "logo.png" | b64enc }}
    marketplace.cloud.google.com/deploy-info: '{"partner_id": "spektra-byol", "product_id": "spektra-byol", "partner_name": "Diamanti"}'

spec:
  descriptor:
    type: Diamanti
    version: '3.9.0-14'
    description: |-
      Kubernetes based installation for the Diamanti Spektra.
    maintainers:
    - name: Diamanti
      url: https://docs.diamanti.com/docs-spektra/3.9.0/SpektraOverview.html
    links:
    - description: 'Official documentation for the Diamanti Spektra'
      url: https://docs.diamanti.com/docs-spektra/3.9.0/InstallationGuide.html#installing-on-gke
    - description: 'GCP Marketplace documentation for the Diamanti Spektra'
      url: https://github.com/diamanticom/gmp-spektra/blob/master/README.md
    notes: |-  
      Check Application Status <a href="https://github.com/diamanticom/gmp-spektra/blob/master/README.md#check-status">here</a> </br>
      Configure Domain <a href="https://github.com/diamanticom/gmp-spektra/blob/master/README.md#configuring-domain">here</a> 
  selector:
    matchLabels:
      app.kubernetes.io/name: "{{ .Release.Name }}"
  addOwnerRef: true
  componentKinds:
    - group: apps/v1
      kind: Deployment
    - group: v1
      kind: Secret
    - group: v1
      kind: ServiceAccount
    - group: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
    - group: rbac.authorization.k8s.io/v1
      kind: ClusterRole

