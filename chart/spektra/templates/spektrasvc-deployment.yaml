apiVersion: v1
kind: ServiceAccount
metadata:
  name: spektrasvc
  namespace: "{{ .Values.namespace }}"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: spektrasvc
subjects:
- kind: ServiceAccount
  name: spektrasvc
  namespace: "{{ .Values.namespace }}"
roleRef:
  kind: ClusterRole
  name: spektra-custom-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: spektra-custom-role
rules:
- apiGroups: [""]
  resources: ["*"]
  verbs: ["*"]
- apiGroups: ["acme.cert-manager.io"]
  resources: ["*"]
  verbs: ["*"]
- apiGroups: ["addons.cluster.x-k8s.io"]
  resources: ["*"]
  verbs: ["*"]
- apiGroups: ["admissionregistration.k8s.io"]
  resources: ["mutatingwebhookconfigurations", "validatingwebhookconfigurations"]
  verbs: ["*"]
- apiGroups: ["apiextensions.k8s.io"]
  resources: ["*"]
  verbs: ["*"]
- apiGroups: ["apiregistration.k8s.io"]
  resources: ["*"]
  verbs: ["*"]
- apiGroups: ["apps.kubernetes.io"]
  resources: ["*"]
  verbs: ["*"]
- apiGroups: ["apps"]
  resources: ["*"]
  verbs: ["*"]
- apiGroups: ["authentication.gke.io"]
  resources: ["*"]
  verbs: ["*"]
- apiGroups: ["authentication.k8s.io"]
  resources: ["*"]
  verbs: ["*"]
- apiGroups: ["authorization.k8s.io"]
  resources: ["*"]
  verbs: ["*"]
- apiGroups: ["auto.gke.io"]
  resources: ["*"]
  verbs: ["*"]
- apiGroups: ["batch"]
  resources: ["*"]
  verbs: ["*"]
- apiGroups: ["bootstrap.cluster.x-k8s.io"]
  resources: ["*"]
  verbs: ["*"]
- apiGroups: ["cert-manager.io"]
  resources: ["*"]
  verbs: ["*"]
- apiGroups: ["certificates.k8s.io"]
  resources: ["*"]
  verbs: ["*"]
- apiGroups: ["cluster.x-k8s.io"]
  resources: ["*"]
  verbs: ["*"]
- apiGroups: ["clusterctl.cluster.x-k8s.io"]
  resources: ["*"]
  verbs: ["*"]
- apiGroups: ["controlplane.cluster.x-k8s.io"]
  resources: ["*"]
  verbs: ["*"]
- apiGroups: ["coordination.k8s.io"]
  resources: ["*"]
  verbs: ["*"]
- apiGroups: ["discovery.k8s.io"]
  resources: ["*"]
  verbs: ["*"]
- apiGroups: ["events.k8s.io"]
  resources: ["*"]
  verbs: ["*"]
- apiGroups: ["flowcontrol.apiserver.k8s.io"]
  resources: ["*"]
  verbs: ["*"]
- apiGroups: ["hub.gke.io"]
  resources: ["*"]
  verbs: ["*"]
- apiGroups: ["infrastructure.cluster.x-k8s.io"]
  resources: ["*"]
  verbs: ["*"]
- apiGroups: ["internal.autoscaling.gke.io"]
  resources: ["*"]
  verbs: ["*"]
- apiGroups: ["ipam.cluster.x-k8s.io"]
  resources: ["*"]
  verbs: ["*"]
- apiGroups: ["metrics.k8s.io"]
  resources: ["*"]
  verbs: ["*"]
- apiGroups: ["monitoring.googleapis.com"]
  resources: ["*"]
  verbs: ["*"]
- apiGroups: ["mongodbcommunity.mongodb.com"]
  resources: ["*"]
  verbs: ["*"]
- apiGroups: ["minio.min.io"]
  resources: ["*"]
  verbs: ["*"]
- apiGroups: ["networking.gke.io"]
  resources: ["*"]
  verbs: ["*"]
- apiGroups: ["networking.k8s.io"]
  resources: ["*"]
  verbs: ["*"]
- apiGroups: ["node.k8s.io"]
  resources: ["*"]
  verbs: ["*"]
- apiGroups: ["nodemanagement.gke.io"]
  resources: ["*"]
  verbs: ["*"]
- apiGroups: ["rbac.authorization.k8s.io"] 
  resources: ["*"]
  verbs: ["*"]
- apiGroups: ["runtime.cluster.x-k8s.io"]
  resources: ["*"]
  verbs: ["*"]
- apiGroups: ["scheduling.k8s.io"]
  resources: ["*"]
  verbs: ["*"]
- apiGroups: ["snapshot.storage.k8s.io"]
  resources: ["*"]
  verbs: ["*"]
- apiGroups: ["storage.k8s.io"]
  resources: ["*"]
  verbs: ["*"]
- apiGroups: ["tenancy.x-k8s.io"] 
  resources: ["*"]
  verbs: ["*"]
- apiGroups: ["warden.gke.io"] 
  resources: ["*"]
  verbs: ["*"]
- apiGroups: ["spektra.diamanti.io"] 
  resources: ["*"]
  verbs: ["*"]
- apiGroups: ["spektra.diamanti.com"] 
  resources: ["*"]
  verbs: ["*"]
- apiGroups: ["spektrasvcs.spektra.diamanti.io"] 
  resources: ["*"]
  verbs: ["*"]
- apiGroups: ["monitoring.banzaicloud.io"] 
  resources: ["*"]
  verbs: ["*"]
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: spektrasvc
  namespace: "{{ .Values.namespace }}"
  labels:
    spektra.diamanti.io/version: "{{ .Chart.AppVersion }}"
spec:
  replicas: 1
  selector:
    matchLabels:
      name: spektrasvc
  template:
    metadata:
      labels:
        name: spektrasvc
    spec:
      serviceAccountName: spektrasvc
      containers:
      - name: spektrasvc
        image: {{ .Values.images.spektrasvcRepo }}:{{ .Values.images.spektrasvcTag }}
        imagePullPolicy: {{ .Values.images.spektrasvcPullPolicy }}
        command:
        - spektrasvc
        env:
          - name: SPEKTRA_VERSION
            value: "{{ .Chart.AppVersion }}"
          - name: OPERATOR_NAME
            value: "spektrasvc"
          - name: WATCH_NAMESPACE
            value: ""
          - name: VIP
            value: "{{ .Values.spec.clusterVip }}"
          - name: API_PORT
            value: "{{ .Values.spec.clusterApiPort }}"
          - name: FQDN
            value: "{{ .Values.spec.spektraFqdn }}"
          - name: PORT
            value: "{{ .Values.spec.spektraPort }}"
          - name: EXTERNAL_IP
            value: "{{ .Values.spec.externalIp }}"
          - name: IMPERSONATION
            value: "{{ .Values.spec.impersonation }}"
          - name: CLUSTER_TYPE
            value: "DOMAIN-PROD"
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
