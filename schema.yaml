x-google-marketplace:
  schemaVersion: v2
  
  applicationApiVersion: v1beta1
  
  publishedVersion: '3.9.0-14'

  clusterConstraints:
    assistedClusterCreation:
      type: STRICT
      gke:
        nodePool:
        - numNodes: 3
          machineType: e2-standard-4

  publishedVersionMetadata:
    releaseNote: >-
      Initial Release of Spektra (BYOL).
    releaseTypes:
      - Feature
    recommended: false

  deployerServiceAccount:
    description: >
      Service account for the Spektra deployment. This service account
      requires permissions to provision various resources.
    roles:
    - type: ClusterRole
      rulesType: CUSTOM
      rules:
      - apiGroups: ['']
        resources: ['secrets', 'ServiceAccount', 'namespaces']
        verbs: ['*']
      - apiGroups: ['apps']
        resources: ['deployments']
        verbs: ['*']
      - apiGroups: ['rbac.authorization.k8s.io']
        resources: ['*']
        verbs: ['*']
      - apiGroups: ['apiextensions.k8s.io']
        resources: ['*']
        verbs: ['*']
  
  images:
    spektrasvc:
      properties: 
        spektrasvcRepo: 
          type: FULL
          
form:
  - widget: help
    description: |
      <h4>Prerequisites</h4>
      <ul>
          <li>GKE cluster with K8S version 1.28 </li>
          <li>There should be at least one worker node with a minimum configuration of <b>E2-Standard-4 [4 VCPU and 16GB
                  Memory]</b>. </li>
          <li>To configure OIDC, Spektra's FQDN Issuer URL requires a CA certificate. </li>
      </ul>
      <h4>Installation Steps</h4>
      <ul>
          <li>Configure <b>OIDC</b> using the following script <a
                  href="https://raw.githubusercontent.com/diamanticom/gmp-spektra/master/gke-oidc.sh">here</a>. </br>
              &nbsp;&nbsp;&nbsp;&nbsp;<b>usage:</b>
              <code> ./gke-oidc.sh &lt;Cluster Name&gt; -z &lt;Cluster Zone&gt; -s &lt;Spektra FQDN&gt; -c &lt;CA Cert File&gt;,&lt;CA Key File&gt;</code>
          </li>
          <li>Setup Cloud DNS for the Spektra FQDN. <a
                  href="https://github.com/diamanticom/gmp-spektra/blob/master/README.md#set-up-the-cloud-dns-for-your-fqdn">here</a>
          </li>
      </ul>
      <h4>Deployment Steps</h4>
      <ul>
        <li>Select the <b>"spektra-system"</b> namespace. If it does not exist, select <b>create a new namespace</b> with the name <b>"spektra-system"</b>.</li>
        <li>For OIDC_VIP, Spektra_FQDN, CA_CERT_FILE_BASE64 and CA_KEY_FILE_BASE64, use the values provided by the <b>gke-oidc.sh</b> script.</li>
        <li>Deploy Spektra. Once deployed, check status and configure the domain by following the steps outlined <a
                  href="https://github.com/diamanticom/gmp-spektra/blob/master/README.md#check-status">here</a>.
        </li>
      </ul>
      <h5><a href="https://github.com/diamanticom/gmp-spektra/blob/master/README.md">Link to documentation.</a></h5>

properties:
  name:
    type: string
    x-google-marketplace:
      type: NAME
  namespace:
    type: string
    default: spektra-system
    x-google-marketplace:
      type: NAMESPACE
  spec.clusterVip:
    type: string
    title: OIDC_VIP
    description: It is the OIDC VIP address of the GKE cluster.
  spec.spektraFqdn:
    type: string
    title: Spektra_FQDN
    description: Fully Qualified Domain Name (FQDN) used for cluster.
  spec.spektraPort:
    type: integer
    title: Spektra Port
    description: Spektra ingress HTTPS port
    default: 5443
  spec.clusterApiPort:
    type: integer
    title: Cluster Api Port
    description: Domain cluster k8s API port
    default: 443
  spec.controlPlaneCert.type:
    type: string
    description: CA Certificate
    default: ca
  spec.controlPlaneCert.crt:
    type: string
    title: CA_CERT_FILE_BASE64
    description: CA_CERT_FILE_BASE64 is valid certificate in base64 format.
  spec.controlPlaneCert.key:
    type: string
    title: CA_KEY_FILE_BASE64
    description: CA_KEY_FILE_BASE64 is valid private key in base64 format.

required:
- name
- namespace
- spec.clusterVip
- spec.spektraFqdn
- spec.controlPlaneCert.crt
- spec.controlPlaneCert.key
